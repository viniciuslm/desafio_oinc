<div class="p-4 bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
    <div class="mb-1 w-full">
        <div class="mb-4">
            <nav class="flex mb-5" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-2">
                    <li class="inline-flex items-center">
                        <a href="/" class="text-gray-700 hover:text-gray-900 inline-flex items-center">
                            <svg class="w-5 h-5 mr-2.5" fill="currentColor" viewBox="0 0 20 20"
                                xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z">
                                </path>
                            </svg>
                            Home
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20"
                                xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd"
                                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                    clip-rule="evenodd"></path>
                            </svg>
                            <span class="text-gray-400 ml-1 md:ml-2 text-sm font-medium"
                                aria-current="page">Accounts</span>
                        </div>
                    </li>
                </ol>
            </nav>
            <h1 class="text-xl sm:text-2xl font-semibold text-gray-900">Accounts</h1>
        </div>
        <div class="block sm:flex items-center">
            <div class="w-full">
                <%= live_patch to: Routes.bank_accounts_path(@socket, :open), "data-role": "open-account", replace: false do %>
                <button type="button" phx-click={show_modal()}
                    class="text-white bg-cyan-600 hover:bg-cyan-700 focus:ring-4 focus:ring-cyan-200 font-medium inline-flex items-center rounded-lg text-sm px-3 py-2 text-center sm:ml-auto">
                    <svg class="-ml-1 mr-2 h-6 w-6" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                            clip-rule="evenodd"></path>
                    </svg>
                    Open account
                </button>
                <% end %>
            </div>
        </div>
    </div>
</div>
<div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="align-middle inline-block min-w-full">
            <div class="shadow overflow-hidden">
                <table class="table-fixed min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-100">
                        <tr>
                            <th scope="col" class="p-4 text-left text-xs font-medium text-gray-500 uppercase">
                                Id
                            </th>
                            <th scope="col" class="p-4 text-left text-xs font-medium text-gray-500 uppercase">
                                Client Name
                            </th>
                            <th scope="col" class="p-4 text-left text-xs font-medium text-gray-500 uppercase">
                                Current Balance
                            </th>
                            <th scope="col" class="p-4 text-left text-xs font-medium text-gray-500 uppercase">
                                Status
                            </th>
                            <th scope="col" class="p-4 text-left text-xs font-medium text-gray-500 uppercase">
                                Accounts Client
                            </th>
                            <th scope="col" class="p-4">
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <%= if Enum.count(@accounts) == 0 do %>
                        <.live_component module={Empty} id="Empty" colspan={6} />
                        <% else %>
                        <%= for account <- @accounts do %>
                        <.live_component module={Row} id={account.id} account={account} />
                        <% end %>
                        <% end %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<%= case @live_action do %>
<% :open -> %>
<.modal titulo={"Open Account"} return_to={Routes.bank_accounts_path(@socket, :index)}>
    <.live_component module={Open} id={:open} action={@live_action}
        open_account={@open_account} return_to={Routes.bank_accounts_path(@socket, :index)} />
</.modal>
<% moviment when moviment in [:deposit, :withdrawn] -> %>
<.modal titulo={humanize(@live_action) <> " Account"} return_to={Routes.bank_accounts_path(@socket, :index)}>
    <.live_component module={Moviment} id={@live_action} action={@live_action}
        moviment_account={@moviment_account} account_id={@account_id} return_to={Routes.bank_accounts_path(@socket, :index)} />
</.modal>
<% :close -> %>
<.modal_close titulo={"Close Account"} return_to={Routes.bank_accounts_path(@socket, :index)}>
    <.live_component module={Close} id={@account_id} action={@live_action} message={"Are you sure you want to close the account?"}
        return_to={Routes.bank_accounts_path(@socket, :index)} />
</.modal_close>
<% _ -> %>
<% end %>
<%= if @validation_failure do %>
<.modal_error titulo={"Error"} return_to={Routes.bank_accounts_path(@socket, :index)}>
    <.live_component module={Error} id={:error} error={@error} return_to={Routes.bank_accounts_path(@socket, :index)} />
</.modal_error>
<% end %>
